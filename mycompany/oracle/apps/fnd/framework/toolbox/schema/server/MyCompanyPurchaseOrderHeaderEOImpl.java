package mycompany.oracle.apps.fnd.framework.toolbox.schema.server;

import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.toolbox.schema.server.PurchaseOrderHeaderEOImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.AttributeList;
import oracle.jbo.Key;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class MyCompanyPurchaseOrderHeaderEOImpl extends PurchaseOrderHeaderEOImpl {
    public static final int MAXATTRCONST = EntityDefImpl.getMaxAttrConst("oracle.apps.fnd.framework.toolbox.schema.server.PurchaseOrderHeaderEO");
    private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public MyCompanyPurchaseOrderHeaderEOImpl()
  {
  }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (OAEntityDefImpl)EntityDefImpl.findDefObject("mycompany.oracle.apps.fnd.framework.toolbox.schema.server.MyCompanyPurchaseOrderHeaderEO");
        }
        return mDefinitionObject;
    }

    /**
     * 
     * Add attribute defaulting logic in this method.
     */
    public void create(AttributeList attributeList)
  {
    super.create(attributeList);

    // Add or change the default values here.
    setPaymentTermsCode("NET_60");
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        return super.getAttrInvokeAccessor(index, attrDef);
    }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {super.setAttrInvokeAccessor(index, value, attrDef);
        return;
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number headerId) {
        return new Key(new Object[]{headerId});
    }
}
