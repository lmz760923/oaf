/*===========================================================================+
 |      Copyright (c) 2006 Oracle Corporation, Redwood Shores, CA, USA       |
 |                         All rights reserved.                              |
 +===========================================================================+
 |  HISTORY                                                                  |
 +===========================================================================*/
 // javadoc_private
package oracle.apps.fnd.framework.toolbox.schema.server;
import oracle.apps.fnd.common.VersionInfo;
import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.RowID;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;

import java.util.HashMap;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class PurchaseOrderPPREOImpl extends OAEntityImpl {

    public static final int CURRENCYCODE = 0;
    public static final String RCS_ID="$Header: PurchaseOrderPPREOImpl.java 120.1 2006/07/03 21:29:11 atgops1 noship $";
  public static final boolean RCS_ID_RECORDED =
        VersionInfo.recordClassVersion(RCS_ID, "oracle.apps.fnd.framework.toolbox.schema.server");
    public static final int RATE = 1;
    public static final int ROWID = 2;


    private static oracle.apps.fnd.framework.server.OAEntityDefImpl mDefinitionObject;

  //Following hashmap is only used as an example
  private static HashMap currencyRateMap = new HashMap();

  static
  {
      currencyRateMap.put("CAD", new Number(1) );
      currencyRateMap.put("DEM", new Number(2) );
      currencyRateMap.put("ESP", new Number(3) );
      currencyRateMap.put("EUR", new Number(4) );
      currencyRateMap.put("FRF", new Number(5) );
      currencyRateMap.put("GBP", new Number(6) );
      currencyRateMap.put("JPY", new Number(7) );
      currencyRateMap.put("MXP", new Number(8) );
      currencyRateMap.put("USD", new Number(9) );

  }

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public PurchaseOrderPPREOImpl()
  {
  }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (OAEntityDefImpl)EntityDefImpl.findDefObject("oracle.apps.fnd.framework.toolbox.schema.server.PurchaseOrderPPREO");
        }
        return mDefinitionObject;
    }

    /**
     *
     * Gets the attribute value for CurrencyCode, using the alias name CurrencyCode
     */
    public String getCurrencyCode()
  {
    return (String)getAttributeInternal(CURRENCYCODE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CurrencyCode
   */
  public void setCurrencyCode(String value)
  {
    setAttributeInternal(CURRENCYCODE, value);
  }

  /**
   * 
   * Gets the attribute value for Rate, using the alias name Rate
   */
  public Number getRate()
  {
    return (Number)getAttributeInternal(RATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Rate
   */
  public void setRate(Number value)
  {
    setAttributeInternal(RATE, value);
  }

  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
        switch (index) {
        case CURRENCYCODE:
            return getCurrencyCode();
        case RATE:
            return getRate();
        case ROWID:
            return getRowID();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
        switch (index) {
        case CURRENCYCODE:
            setCurrencyCode((String)value);
            return;
        case RATE:
            setRate((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

  /**
   * 
   * Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(String currencyCode)
  {
    return new Key(new Object[] {currencyCode});
  }


  protected void validateEntity()
  {
    super.validateEntity();

   setRateBasedOnCurrency(this.getCurrencyCode());
  }

  private void setRateBasedOnCurrency(String currencyCode)
  {
      Number rate = (Number)currencyRateMap.get(currencyCode);
      if(rate == null)
        rate = new Number(-1);
  
      setRate( rate );
  }


  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateDate
   */
  public void setLastUpdateDate(Date value)
  {
  }
  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdatedBy
   */
  public void setLastUpdatedBy(Number value)
  {
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreationDate
   */
  public void setCreationDate(Date value)
  {
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(Number value)
  {
  }
  /**
   * 
   * Sets <code>value</code> as the attribute value for LastUpdateLogin
   */
  public void setLastUpdateLogin(Number value)
  {
  }

  /**
   * 
   * Gets the attribute value for RowID, using the alias name RowID
   */
  public RowID getRowID()
  {
    return (RowID)getAttributeInternal(ROWID);
  }
 

}
