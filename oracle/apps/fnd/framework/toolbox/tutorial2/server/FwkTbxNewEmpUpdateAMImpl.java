package oracle.apps.fnd.framework.toolbox.tutorial2.server;

/*========================================================================+
 |   Copyright (c) 2001, 2020 Oracle Corporation, Redwood Shores, CA, USA |
 |                      All rights reserved.                              |
 +========================================================================+
 |  HISTORY                                                               |
 | 5-Nov-2014 SRSIDDAM Created.                                           |
 +========================================================================+
 */
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import java.util.Arrays;

import java.util.Hashtable;

import oracle.apps.fnd.common.MessageToken;
import oracle.apps.fnd.common.VersionInfo;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.OAFwkConstants;
import oracle.apps.fnd.framework.OARow;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;

import oracle.apps.fnd.framework.server.OAViewObjectImpl;


import oracle.jbo.Row;
import oracle.jbo.Transaction;
import oracle.jbo.domain.BlobDomain;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FwkTbxNewEmpUpdateAMImpl
  extends OAApplicationModuleImpl {
    public static final String RCS_ID = "$Header: FwkTbxNewEmpUpdateAMImpl.java 120.0.12020000.2 2020/01/13 16:29:58 spunam noship $"; 
    public static final boolean RCS_ID_RECORDED = VersionInfo.recordClassVersion(RCS_ID, "oracle.apps.fnd.framework.toolbox.tutorial2.server");
  /**This is the default constructor (do not remove)
   */
  public FwkTbxNewEmpUpdateAMImpl()
  {
  }

  // Fetch employees details from his/her username

  public Hashtable<String, String> fetchDetails(String empUserName)
  {
    Hashtable<String, String> empDet = new Hashtable<String, String>();
    FwkTbxNewEmployeeVOImpl empVo = getFwkTbxNewEmployeeVO1();

    String empId = null;
    String empFullName = null;
    try
    {
      empVo.setWhereClause("upper(guid)='" + empUserName.toUpperCase() +
                           "'");
      empVo.executeQuery();
      Row row = empVo.getRowAtRangeIndex(0);
      empId = row.getAttribute("EmployeeId").toString();
      empFullName = row.getAttribute("FullName").toString();

      empDet.put("EMP_ID", empId);
      empDet.put("EMP_FULLNAME", empFullName);
    }
    catch (Exception e)
    {
      e.printStackTrace();
    }

    return empDet;
  }

  // Update Employee Detail Changes

  public void updateEmployee(String employeeId)
  {
    FwkTbxNewEmpDetVOImpl vo = getFwkTbxNewEmpDetVO1();
    if (vo == null)
    {
      MessageToken[] errTokens =
      { new MessageToken("OBJECT_NAME", "FwkTbxNewEmpDetVO1") };
      throw new OAException("FND", "FWK_TBX_NEW_OBJECT_NOT_FOUND",
                            errTokens);
    }
    vo.initQuery(employeeId);
  }


  // commit a transaction

  public void apply()
  {
    getTransaction().commit();
  }

  // rollback a transaction

  public void rollbackEmployee()
  {

    Transaction tx = getTransaction();

    if (tx.isDirty())
    {
      tx.rollback();
    }
  }

  public void initDFFAddress(String employeeId)
  {


    FwkTbxNewAddressDFFVOImpl dffVo = getFwkTbxNewAddressDFFVO1();

    if (!dffVo.isExecuted())
    {

      dffVo.initQuery(employeeId);

    }


  }

  public void initDetails(String employeeId)
  {

    FwkTbxNewEmpVOImpl vo = getFwkTbxNewEmpVO1();
    if (vo == null)
    {
      MessageToken[] errTokens =
      { new MessageToken("OBJECT_NAME", "FwkTbxNewEmpVO1") };
      throw new OAException("FND", "FWK_TBX_NEW_OBJECT_NOT_FOUND",
                            errTokens);
    }
    vo.initQuery(employeeId);
  }

  public void initSkills(String employeeId)
  {


    FwkTbxNewSkillsAvailableToEnrollVOImpl vo =
      getFwkTbxNewSkillsAvailableToEnrollVO1();
    if (vo == null)
    {
      MessageToken[] errTokens =
      { new MessageToken("OBJECT_NAME",
                         "FwkTbxNewSkillsAvailableToEnrollVO1") };
      throw new OAException("FND", "FWK_TBX_NEW_OBJECT_NOT_FOUND",
                            errTokens);
    }
    vo.initSkillsAvailableQuery(employeeId);
  }

  public void initAddress(String employeeId)
  {


    FwkTbxNewEmpAddressVOImpl vo = getFwkTbxNewEmpAddressVO1();
    if (vo == null)
    {
      MessageToken[] errTokens =
      { new MessageToken("OBJECT_NAME", "FwkTbxNewEmpAddressVO1") };
      throw new OAException("FND", "FWK_TBX_NEW_OBJECT_NOT_FOUND",
                            errTokens);
    }
    vo.initAddress(employeeId);
  }

  /**
   * This Method is a common method to execute different VO objects
   * with where caluse "employee_id=someEmployeeId"
   */
  public void initQuery(String voName, String employeeId)
  {
    OAViewObjectImpl vo = (OAViewObjectImpl) this.findViewObject(voName);
    vo.setWhereClause("employee_id=" + String.valueOf(employeeId));
    vo.executeQuery();
  }

  /**Container's getter for FwkTbxNewSkillsVO1
   */
  public FwkTbxNewSkillsVOImpl getFwkTbxNewSkillsVO1()
  {
    return (FwkTbxNewSkillsVOImpl) findViewObject("FwkTbxNewSkillsVO1");
  }

  /**Container's getter for FwkTbxNewSkillRatingVO1
   */
  public FwkTbxNewSkillRatingVOImpl getFwkTbxNewSkillRatingVO1()
  {
    return (FwkTbxNewSkillRatingVOImpl) findViewObject("FwkTbxNewSkillRatingVO1");
  }

  /**Container's getter for FwkTbxNewEmpDetVO1
   */
  public FwkTbxNewEmpDetVOImpl getFwkTbxNewEmpDetVO1()
  {
    return (FwkTbxNewEmpDetVOImpl) findViewObject("FwkTbxNewEmpDetVO1");
  }


    /**Container's getter for FwkTbxNewEmpSkillsVO1
     */
    public FwkTbxNewEmpSkillsVOImpl getFwkTbxNewEmpSkillsVO1()
  {
    return (FwkTbxNewEmpSkillsVOImpl)findViewObject("FwkTbxNewEmpSkillsVO1");
  }


  /**Container's getter for FwkTbxNewEmpTypeVO1
   */
  public FwkTbxNewEmpTypeVOImpl getFwkTbxNewEmpTypeVO1()
  {
    return (FwkTbxNewEmpTypeVOImpl) findViewObject("FwkTbxNewEmpTypeVO1");
  }

  /**Container's getter for FwkTbxNewEmpTitleVO1
   */
  public FwkTbxNewEmpTitleVOImpl getFwkTbxNewEmpTitleVO1()
  {
    return (FwkTbxNewEmpTitleVOImpl) findViewObject("FwkTbxNewEmpTitleVO1");
  }

  /**Container's getter for FwkTbxNewSkillsAvailableToEnroll1
   */
  public FwkTbxNewSkillsAvailableToEnrollVOImpl getFwkTbxNewSkillsAvailableToEnrollVO1()
  {
    return (FwkTbxNewSkillsAvailableToEnrollVOImpl) findViewObject("FwkTbxNewSkillsAvailableToEnrollVO1");
  }

  /**Container's getter for FwkTbxNewEmpAddressVO1
   */
  public FwkTbxNewEmpAddressVOImpl getFwkTbxNewEmpAddressVO1()
  {
    return (FwkTbxNewEmpAddressVOImpl) findViewObject("FwkTbxNewEmpAddressVO1");
  }

  /**Container's getter for FwkTbxNewEmployeeVO1
   */
  public FwkTbxNewEmployeeVOImpl getFwkTbxNewEmployeeVO1()
  {
    return (FwkTbxNewEmployeeVOImpl) findViewObject("FwkTbxNewEmployeeVO1");
  }

  /**Container's getter for FwkTbxNewEmpVO1
   */
  public FwkTbxNewEmpVOImpl getFwkTbxNewEmpVO1()
  {
    return (FwkTbxNewEmpVOImpl) findViewObject("FwkTbxNewEmpVO1");
  }

  public void initImg(String s2, String voName, String empId)
  {
    OAViewObjectImpl oaviewobjectimpl =
      (OAViewObjectImpl) this.findViewObject(voName);
    oaviewobjectimpl.setWhereClause("employee_id=" +
                                    String.valueOf(empId));
    oaviewobjectimpl.executeQuery();
    if (oaviewobjectimpl.first() != null)
    {
      OARow oarow = (OARow) oaviewobjectimpl.first();
      BlobDomain blobdomain = (BlobDomain) oarow.getAttribute("EmpPhoto");
      if (blobdomain != null)
      {
        String s3 = createFile(s2, blobdomain, "2.jpg");
        // oarow.setAttribute("Id", s3);
      }
      else
      {
        try
        {
          File f = new File(s2 + "2.jpg");
          if (f.exists())
          {
            f.delete();
          }
        }
        catch (Exception e)
        {
            if(this.isLoggingEnabled(OAFwkConstants.EXCEPTION))   
             {  
                  this.writeDiagnostics(this,"Exception while creating the image file",OAFwkConstants.EXCEPTION);  
             }  
        }


      }

    }
  }

  public void fromInputToOutput(InputStream inputstream,
                                OutputStream outputstream)
    throws IOException
  {
    byte abyte0[] = new byte[255];
    for (int i = 255; i == 255; )
    {
      i = inputstream.read(abyte0);
      if (i < 0)
        break;
      outputstream.write(abyte0, 0, i);
    }

    outputstream.close();
    inputstream.close();
  }

  public String createFile(String s, BlobDomain blobdomain, String s1)
  {
    File file = new File(s);
    if (!file.exists())
      file.mkdirs();
    File file1 = new File(s, s1);
    try
    {
      fromInputToOutput(blobdomain.getBinaryStream(),
                        new FileOutputStream(file1));
    }
    catch (IOException ioexception)
    {
      ioexception.printStackTrace();
    }
    return s + file1.getName();
  }


  /**Container's getter for FwkTbxNewAddressDFFVO1
   */
  public FwkTbxNewAddressDFFVOImpl getFwkTbxNewAddressDFFVO1()
  {
    return (FwkTbxNewAddressDFFVOImpl) findViewObject("FwkTbxNewAddressDFFVO1");
  }

    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        launchTester("oracle.apps.fnd.framework.toolbox.tutorial2.server", /* package name */
      "FwkTbxNewEmpUpdateAMLocal" /* Configuration Name */);
    }
}
