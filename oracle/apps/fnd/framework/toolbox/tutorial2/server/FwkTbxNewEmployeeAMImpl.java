/*========================================================================+
 |   Copyright (c) 2001, 2020 Oracle Corporation, Redwood Shores, CA, USA |
 |                      All rights reserved.                              |
 +========================================================================+
 |  HISTORY                                                               |
 | 5-Nov-2014 SRSIDDAM Created.                                           |
 +========================================================================+
 */
package oracle.apps.fnd.framework.toolbox.tutorial2.server;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;

import java.sql.Blob;

import java.util.Arrays;

import oracle.apps.fnd.common.MessageToken;
import oracle.apps.fnd.common.VersionInfo;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.OARow;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;


import oracle.jbo.Row;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Number;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FwkTbxNewEmployeeAMImpl
  extends OAApplicationModuleImpl {
	public static final String RCS_ID = "$Header: FwkTbxNewEmployeeAMImpl.java 120.0.12020000.3 2020/03/24 08:28:16 spunam noship $";
  public static final boolean RCS_ID_RECORDED = VersionInfo.recordClassVersion(RCS_ID, "oracle.apps.fnd.framework.toolbox.tutorial2.server");
  /**This is the default constructor (do not remove)
   */
  public FwkTbxNewEmployeeAMImpl()
  {
  }


  /**Container's getter for FwkTbxNewEducationVO1
     */
    public FwkTbxNewEducationVOImpl getFwkTbxNewEducationVO1()
  {
    return (FwkTbxNewEducationVOImpl)findViewObject("FwkTbxNewEducationVO1");
  }

  /**Container's getter for FwkTbxNewEmpAddrVO1
   */
  public FwkTbxNewEmpAddrVOImpl getFwkTbxNewEmpAddrVO1()
  {
    return (FwkTbxNewEmpAddrVOImpl) findViewObject("FwkTbxNewEmpAddrVO1");
  }

  /**Container's getter for FwkTbxNewEmployeeVO1
     */
    public FwkTbxNewEmployeeVOImpl getFwkTbxNewEmployeeVO1()
  {
    return (FwkTbxNewEmployeeVOImpl)findViewObject("FwkTbxNewEmployeeVO1");
  }


  /**Container's getter for FwkTbxNewExperienceVO1
   */
  public FwkTbxNewExperienceVOImpl getFwkTbxNewExperienceVO1()
  {
    return (FwkTbxNewExperienceVOImpl) findViewObject("FwkTbxNewExperienceVO1");
  }

  /**
     * This method is to search for a particular employee
     * */

  /**
   * This Method is a common method to execute different VO objects
   * with where caluse "employee_id=someEmployeeId"
   */
  public

  void initQuery(String voName, String employeeId)
  {
    OAViewObjectImpl vo = (OAViewObjectImpl) this.findViewObject(voName);
    vo.setWhereClause("employee_id=" + String.valueOf(employeeId));
    vo.executeQuery();
  }

  public int getVORowCount(String voName)
  {

    if (voName.equals("FwkTbxNewEducationVO1"))
      return this.getFwkTbxNewEducationVO1().getRowCount();

    else if (voName.equals("FwkTbxNewExperienceVO1"))
      return this.getFwkTbxNewExperienceVO1().getRowCount();

    else if (voName.equals("FwkTbxNewEmpTrainingVO1"))
      return this.getFwkTbxNewEmpTrainingVO1().getRowCount();

    else if (voName.equals("FwkTbxNewAssetVO1"))
      return this.getFwkTbxNewAssetVO1().getRowCount();
    else if (voName.equals("FwkTbxNewEmpSkillsVO1"))
      return this.getFwkTbxNewEmpSkillsVO1().getRowCount();
    else
      return 0;
  }

  public void initGraphQuery(String voName)
  {
    OAViewObjectImpl vo = (OAViewObjectImpl) this.findViewObject(voName);
    vo.executeQuery();
  }

  public void initEmployeeID(String voName, String EmpId)
  {
    OAViewObjectImpl vo = (OAViewObjectImpl) this.findViewObject(voName);
    vo.setWhereClauseParam(0, EmpId);
    vo.executeQuery();
  }

  public void searchEmp()
  {

    //            int empId=Integer.parseInt(pageContext.getParameter("EmpId"));
    OAViewObjectImpl empVo = this.getFwkTbxNewEmployeeVO1();
    if (!empVo.isPreparedForExecution())
    {
      empVo.setWhereClause("employee_id=6");
      empVo.executeQuery();
      Row row = (Row) empVo.getRowAtRangeIndex(0);
    }

    //             OAViewObjectImpl skillVo=this.getFwkTbxNewEmpSkillsVO1();
    //             if(!skillVo.isPreparedForExecution()){
    //                 skillVo.setWhereClause("employee_id=1");
    //                 skillVo.executeQuery();
    //
    //                 }
  }

  public void initTrainingEnrollQuery(String empGuid, String voName,
                                      String executeQuery)
  {
    int empId = calculateEmpIdFromGuid(empGuid);

    OAViewObjectImpl trainingVo =
      (OAViewObjectImpl) this.findViewObject(voName);
    trainingVo.setWhereClauseParam(0, new Number(empId));
    if ("true".equalsIgnoreCase(executeQuery))
    {
      trainingVo.executeQuery();
    }
  }

  public int calculateEmpIdFromGuid(String empGuid)
  {
    OAViewObjectImpl empVo = this.getFwkTbxNewEmployeeVO1();
    int empId = 0;
    empVo.setWhereClause("upper(GUID)='" + empGuid.toUpperCase() + "'");
    empVo.executeQuery();
    Row row = (Row) empVo.getRowAtRangeIndex(0);
    empId = Integer.parseInt(row.getAttribute(0).toString());
    return empId;
  }

  public void createNewEmpTrainingRow(String empGuid)
  {

    if (empGuid != null && empGuid.length() > 2)
    {
      empGuid =
          empGuid.substring(0, 2) + empGuid.substring(2).toLowerCase();
    }

    int empId = calculateEmpIdFromGuid(empGuid);

    OAViewObjectImpl vo = this.getFwkTbxNewEmpEnrollTrainingVO1();

    int newId = 1;

    Row newRow = vo.createRow();
    vo.insertRow(newRow);
    // Required per OA Framework Model Coding Standard M69
    newRow.setNewRowState(Row.STATUS_INITIALIZED);

    newRow.setAttribute("EmpTrainingId", newId);
    newRow.setAttribute("EmployeeId", empId);
  }

  public void removeNewEmpTrainingRow()
  {
    OAViewObjectImpl vo = this.getFwkTbxNewEmpEnrollTrainingVO1();

    vo.getCurrentRow().remove();
  }

  public void updateEmployee(String voName, String EmployeeId)
  {


    this.getTransaction().commit();


  }

  /**Container's getter for FwkTbxNewEmpTrainingVO1
   */
  public FwkTbxNewEmpTrainingVOImpl getFwkTbxNewEmpTrainingVO1()
  {
    return (FwkTbxNewEmpTrainingVOImpl) findViewObject("FwkTbxNewEmpTrainingVO1");
  }


    /**Container's getter for FwkTbxNewSkillRatingVO1
     */
  public FwkTbxNewSkillRatingVOImpl getFwkTbxNewSkillRatingVO1()
  {
    return (FwkTbxNewSkillRatingVOImpl) findViewObject("FwkTbxNewSkillRatingVO1");
  }

  /**Container's getter for FwkTbxNewEmployeeSearchVO1
   */
  public FwkTbxNewEmployeeSearchVOImpl getFwkTbxNewEmployeeSearchVO1()
  {
    return (FwkTbxNewEmployeeSearchVOImpl) findViewObject("FwkTbxNewEmployeeSearchVO1");
  }

  /**Container's getter for FwkTbxNewEmpDistVO1
   */
  public FwkTbxNewEmpDistVOImpl getFwkTbxNewEmpDistVO1()
  {
    return (FwkTbxNewEmpDistVOImpl) findViewObject("FwkTbxNewEmpDistVO1");
  }


  /**Container's getter for FwkTbxNewEmpTrainingChartVO1
   */
  public FwkTbxNewEmpTrainingChartVOImpl getFwkTbxNewEmpTrainingChartVO1()
  {
    return (FwkTbxNewEmpTrainingChartVOImpl) findViewObject("FwkTbxNewEmpTrainingChartVO1");
  }

  /**Container's getter for FwkTbxNewEmpTrendGraphVO1
   */
  public FwkTbxNewEmpTrendGraphVOImpl getFwkTbxNewEmpTrendGraphVO1()
  {
    return (FwkTbxNewEmpTrendGraphVOImpl) findViewObject("FwkTbxNewEmpTrendGraphVO1");
  }


  /**Container's getter for FwkTbxNewEmpSkillsVO1
     */
    public FwkTbxNewEmpSkillsVOImpl getFwkTbxNewEmpSkillsVO1()
  {
    return (FwkTbxNewEmpSkillsVOImpl)findViewObject("FwkTbxNewEmpSkillsVO1");
  }

  /**Container's getter for FwkTbxNewEmpDetVO1
   */
  public FwkTbxNewEmpDetVOImpl getFwkTbxNewEmpDetVO1()
  {
    return (FwkTbxNewEmpDetVOImpl) findViewObject("FwkTbxNewEmpDetVO1");
  }

  /**Container's getter for FwkTbxNewEmpTrendGraph3VO1
   */
  public FwkTbxNewEmpTrendGraph3VOImpl getFwkTbxNewEmpTrendGraph3VO1()
  {
    return (FwkTbxNewEmpTrendGraph3VOImpl) findViewObject("FwkTbxNewEmpTrendGraph3VO1");
  }

  /**Container's getter for DummyFwkTbxAddVO1
   */
  public DummyFwkTbxAddVOImpl getDummyFwkTbxAddVO1()
  {
    return (DummyFwkTbxAddVOImpl) findViewObject("DummyFwkTbxAddVO1");
  }

  /**Container's getter for FwkTbxNewSkillsVO1
   */
  public FwkTbxNewSkillsVOImpl getFwkTbxNewSkillsVO1()
  {
    return (FwkTbxNewSkillsVOImpl) findViewObject("FwkTbxNewSkillsVO1");
  }

  /**Container's getter for FwkTbxNewEmpSkillsDetVO1
   */
  public FwkTbxNewEmpSkillsDetVOImpl getFwkTbxNewEmpSkillsDetVO1()
  {
    return (FwkTbxNewEmpSkillsDetVOImpl) findViewObject("FwkTbxNewEmpSkillsDetVO1");
  }

  /**Container's getter for FwkTbxNewAssetVO1
   */
  public OAViewObjectImpl getFwkTbxNewAssetVO1()
  {
    return (OAViewObjectImpl) findViewObject("FwkTbxNewAssetVO1");
  }

  /**Container's getter for FwkTbxNewEmpTypeVO1
   */
  public FwkTbxNewEmpTypeVOImpl getFwkTbxNewEmpTypeVO1()
  {
    return (FwkTbxNewEmpTypeVOImpl) findViewObject("FwkTbxNewEmpTypeVO1");
  }

  /**Container's getter for FwkTbxNewEmpTitleVO1
   */
  public FwkTbxNewEmpTitleVOImpl getFwkTbxNewEmpTitleVO1()
  {
    return (FwkTbxNewEmpTitleVOImpl) findViewObject("FwkTbxNewEmpTitleVO1");
  }

  public void apply()
  {
    getTransaction().commit();
  }

  public void initImg(String imageFileLocation, String voName, String empId)
  {
    OAViewObjectImpl oaViewObjectImpl =
      (OAViewObjectImpl) this.findViewObject(voName);
    oaViewObjectImpl.setWhereClause("employee_id=" +
                                    String.valueOf(empId));
    oaViewObjectImpl.executeQuery();
    if (oaViewObjectImpl.first() != null)
    {
      OARow oarow = (OARow) oaViewObjectImpl.first();
      BlobDomain blobdomain = (BlobDomain) oarow.getAttribute("EmpPhoto");
      if (blobdomain != null)
      {
        String imageFileCreate = createFile(imageFileLocation, blobdomain, "newImage.jpg");
      }
      else
      {
        try
        {
          File imageFile = new File(imageFileLocation + "newImage.jpg");
          if (imageFile.exists())
          {
            imageFile.delete();
          }
        }
        catch (Exception e)
        {
        }

      }

    }
  }

  public void fromInputToOutput(InputStream inputstream,
                                OutputStream outputstream)
    throws IOException
  {
    byte abyte[] = new byte[255];
    for (int i = 255; i == 255; )
    {
      i = inputstream.read(abyte);
      if (i < 0)
        break;
      outputstream.write(abyte, 0, i);
    }

    outputstream.close();
    inputstream.close();
  }

  public String createFile(String fileLocation, BlobDomain blobdomain, String fileName)
  {
    File file = new File(fileLocation);
    if (!file.exists())
      file.mkdirs();
    File imageFile = new File(fileLocation, fileName);
    try
    {
      fromInputToOutput(blobdomain.getBinaryStream(),
                        new FileOutputStream(imageFile));
    }
    catch (IOException ioexception)
    {
      ioexception.printStackTrace();
    }
    return fileLocation + imageFile.getName();
  }
  public void initDetails(String fileID)
  {
        FwkTbxNewEmployeeVOImpl vo = getFwkTbxNewEmployeeVO1();
    if (vo == null)
    {
      MessageToken[] errTokens =
      { new MessageToken("OBJECT_NAME", "EmployeeFullVO1") };
      throw new OAException("AK", "FWK_TBX_OBJECT_NOT_FOUND", errTokens);
    }
    //vo.initQuery(fileID);
  }

  /**Container's getter for FwkTbxNewTrainingVO1
   */
  public OAViewObjectImpl getFwkTbxNewTrainingVO1()
  {
    return (OAViewObjectImpl) findViewObject("FwkTbxNewTrainingVO1");
  }

  /**Container's getter for FwkTbxNewEmpEnrollTrainingVO1
   */
  public OAViewObjectImpl getFwkTbxNewEmpEnrollTrainingVO1()
  {
    return (OAViewObjectImpl) findViewObject("FwkTbxNewEmpEnrollTrainingVO1");
  }

  public byte[] getPhoto(String voName, String empId)
    throws Exception
  {
    Blob img;
    byte[] imgData = null;
    voName = "FwkTbxNewEmpDetVO1";
    int empIdStr = Integer.parseInt(empId);
    OAViewObjectImpl oaViewObjectImpl =
      (OAViewObjectImpl) this.findViewObject(voName);
    oaViewObjectImpl.setWhereClause("employee_id=" +
                                    String.valueOf(empIdStr));
    oaViewObjectImpl.executeQuery();
    if (oaViewObjectImpl.first() != null)
    {
      OARow oarow = (OARow) oaViewObjectImpl.first();
      img = (Blob) oarow.getAttribute("EmpPhoto");
      if (img != null)
      {
        imgData = img.getBytes(1, (int) img.length());
      }
    }
    return imgData;
  }
  /**Container's getter for FwkTbxNewEmpAssetInfoChartVO1
   */
  public FwkTbxNewEmpAssetInfoChartVOImpl getFwkTbxNewEmpAssetInfoChartVO1()
  {
    return (FwkTbxNewEmpAssetInfoChartVOImpl) findViewObject("FwkTbxNewEmpAssetInfoChartVO1");
  }

  /**Container's getter for FwkTbxNewEmpSpecificAssetInfoChartVO1
   */
  public FwkTbxNewEmpSpecificAssetInfoChartVOImpl getFwkTbxNewEmpSpecificAssetInfoChartVO1()
  {
    return (FwkTbxNewEmpSpecificAssetInfoChartVOImpl) findViewObject("FwkTbxNewEmpSpecificAssetInfoChartVO1");
  }

  /**Container's getter for FwkTbxNewGenericEmpTrainingChartVO1
   */
  public FwkTbxNewGenericEmpTrainingChartVOImpl getFwkTbxNewGenericEmpTrainingChartVO1()
  {
    return (FwkTbxNewGenericEmpTrainingChartVOImpl) findViewObject("FwkTbxNewGenericEmpTrainingChartVO1");
  }

  /**Container's getter for FwkTbxEmployeeHgridVO1
   */
  public FwkTbxEmployeeHgridVOImpl getFwkTbxEmployeeHgridVO1()
  {
    return (FwkTbxEmployeeHgridVOImpl) findViewObject("FwkTbxEmployeeHgridVO1");
  }

  /**Container's getter for FwkTbxNewEmpAssetCcVO1
   */
  public FwkTbxNewEmpAssetCcVOImpl getFwkTbxNewEmpAssetCcVO1()
  {
    return (FwkTbxNewEmpAssetCcVOImpl) findViewObject("FwkTbxNewEmpAssetCcVO1");
  }

    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        launchTester("oracle.apps.fnd.framework.toolbox.tutorial2.server", /* package name */
      "FwkTbxNewEmployeeAMLocal" /* Configuration Name */);
    }
}
